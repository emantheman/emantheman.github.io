{"version":3,"sources":["components/filetree/Node.js","components/filetree/FileTree.js","components/Gallery.js","views/Art.js","components/PDFViewer.js","views/Beached.js","views/Bio.js","components/gameoflife/Cell.js","components/gameoflife/Life.js","components/Back.js","views/CGOL.js","views/ColdCuts.js","views/Concatenate.js","components/TextRotator.js","config/epithets.js","views/Home.js","components/Quote.js","config/quotes.js","views/Quotes.js","views/Resume.js","components/tictactoe/Square.js","components/tictactoe/Board.js","config/routes.js","views/TicTacToe.js","config/schema.js","App.js","config/serviceWorker.js","index.js"],"names":["Node","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleChildren","children","length","setState","prevState","open","createLeaf","state","_this$props","link","name","depth","path","undefined","react_default","a","createElement","onClick","onMouseEnter","hover","onMouseOut","onMouseDown","active","onMouseUp","className","type","href","url","target","rel","Link","to","newTab","createChildren","_this$props2","map","_ref","index","key","toggleVariants","_this$state","classNames","prevProps","menuOpen","_this$state2","_this$props3","toggleMenu","style","marginLeft","Component","defaultProps","FileTree","_props$branches","branches","filetree_Node","Gallery","openLightbox","event","preventDefault","lightboxIsOpen","currentImage","closeLightbox","gotoPrev","gotoNext","gotoImage","handleImageClick","images","renderGallery","gallery","obj","i","css","classes","thumbnail","orientation","src","e","width","alt","Lightbox_default","isOpen","onClickImage","onClickNext","onClickPrev","onClickThumbnail","onClose","gutter","StyleSheet","create","marginRight","overflow","@media (min-width: 500px)","landscape","square","paddingBottom","IMAGES","caption","Art","Gallery_Gallery","menu","PDFViewer","stow","title","height","Beached","PDFViewer_PDFViewer","Bio","getAge","Date","getFullYear","Cell","xPos","yPos","paused","enlarged","x","y","Life","resizeGrid","window","innerWidth","Number","isInteger","cols","cellSize","grid","newGrid","resetGrid","flipCell","drawCell","arguments","col","cell","j","penType","countPopulation","flat","filter","printPopulation","population","Math","ceil","updateCell","c","n","nY","randomize","rows","cb","random","Array","fill","configureGrid","preset","value","rand","blank","config","forEach","coordPair","_coordPair","slicedToArray","default","configSelect","blur","updateGrid","generation","drawGrid","tick","setTimeout","Cells","push","gameoflife_Cell","getCoordPair","svg","nativeEvent","ownerSVGElement","pt","createSVGPoint","clientX","clientY","matrixTransform","getScreenCTM","inverse","floor","changeCell","_this$getCoordPair","console","log","_onMouseMove","_ref2","_ref2$nativeEvent","offsetX","offsetY","mouseIsDown","handleKeyDown","_ref3","shiftKey","keyCode","changeCellSize","_ref4","blankGrid","gosperGlider","shruiken","_ref5","_ref6","dragonfly","_ref7","_ref8","butterfly","ascension","_ref9","_ref10","gammadion","concat","_ref11","_ref12","megagammadion","_ref13","_ref14","addEventListener","_this2","_this$state3","onKeyDown","tabIndex","border","id","patternUnits","d","stroke","strokeWidth","onMouseMove","bind","aria-hidden","ref","select","onChange","label","min","max","step","list","defaultValue","_ref15","isPause","Back","showInitials","CGOL","description","React","createRef","game","scrollIntoView","behavior","block","_this3","components_Back","fontSize","left","r","Life_Life","scrollDown","scrollToDescription","ColdCuts","Concatenate","itemProp","maxWidth","TextRotator","initializeKeyframes","sign","reverseRotation","spin","deg","transform","parseCSSVal","split","ch","isNaN","join","styles","positionRight","positionBottom","positionLeft","positionTop","spinRate","prismBorder","prismBoxShadow","backgroundColor","fontColor","animation","_this$parseCSSVal","_this$parseCSSVal2","halfHeight","Prism","position","perspective","perspectiveOrigin","right","bottom","top","rectangle","transformOrigin","margin","transformStyle","animationName","spinKeyframes","animationTimingFunction","animationDuration","animationFillMode","side","boxShadow","lineHeight","paddingLeft","color","face1","face2","face3","face4","rotateText","facetext","idx","words","len","h","includes","_isMounted","slice","affixed","Faces","ft","epithets","Home","unstow","components_TextRotator","Quote","author","content","q","Fragment","align","line","quotes","sort","b","Quotes","components_Quote","Resume","Square","Board","renderSquare","winSquares","cpu","squares","isTie","xIsNext","win","cpuWin","isOpponent","tie","clickable","tictactoe_Square","vsCPU","level","status","moves","changeOpponent","changeLevel","checked","routes","view","TicTacToe","calculateWinner","lines","token","combo","_lines$i","handleClick","history","stepNumber","current","toConsumableArray","makeComputerMove","availableSquares","getAvailableMoves","getRandIndex","winPossible","minimax","arr","freeIndex","jumpTo","board","sq","player","availableMoves","score","bestMove","bestScore","nextPlayer","move","result","handleLvlChange","objectSpread","handleVsChange","every","el","Moves","_","desc","Board_Board","App","expanded","openMenu","stowed","Routes","route","View","Route","exact","render","filetree_FileTree","location","pathname","withRouter","Boolean","hostname","match","ReactDOM","HashRouter","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.e5c099ef.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nclass Node extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      open: false,\n      hover: false,\n      active: false\n    }\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps.menuOpen !== this.props.menuOpen) {\n      // open menu upstream on click when menu is closed\n      this.setState({ open: this.props.menuOpen })\n    }\n  }\n\n  /**\n   * Hides and displays children on click.\n   */\n  toggleChildren = () => {\n    if (this.props.children.length > 0) {\n      this.setState(prevState => this.setState({ open: !prevState.open }))\n    }\n  }\n\n  /**\n   * Creates a 'leaf' in the dendrogram.\n   * \n   * The type of the leaf corresponds to the type of link:\n   *    'view' => <Link/>\n   *    'anchor' => <a target=\"_blank\"/>\n   *     undefined => <span className=\"folder\"/>\n   */\n  createLeaf = () => {\n    const { open } = this.state\n    const { link, name, depth, path } = this.props\n    // console.log(path)\n    let leaf\n    // determines whether leaf should be a plain folder, an external link,\n    // or a link to a view and returns the corresponding jsx\n    if (link === undefined) { // if not a link, leaf is a folder\n      leaf = (\n        <span\n          onClick={ this.toggleChildren }\n          onMouseEnter={ () => this.setState({ hover: true }) }\n          onMouseOut={ () => this.setState({ hover: false }) }\n          onMouseDown={ () => this.setState({ active: true }) }\n          onMouseUp={ () => this.setState({ active: false }) }\n          className={ 'folder ' + (depth === 0 ? 'root ' : '') + (open ? 'open ' : '') }>\n          { name }\n        </span>\n      )\n    } else if (link.type === 'anchor') { // if type is \"anchor\", link is external\n      leaf = (\n        <a\n          className=\"external-link\"\n          href={ link.url }\n          target=\"_blank\"\n          rel=\"noopener noreferrer\">{ name }\n        </a>\n      )\n    } else { // if type is \"view\", link is relative\n      leaf = (\n        <Link\n          to={ link.url }\n          target={ link.newTab ? '_blank' : '_self' }\n          onClick={ this.toggleChildren }\n          onMouseEnter={ () => this.setState({ hover: true }) }\n          onMouseOut={ () => this.setState({ hover: false }) }\n          onMouseDown={ () => this.setState({ active: true }) }\n          onMouseUp={ () => this.setState({ active: false }) }\n          className={ 'view-link ' + (path === link.url ? 'current' : '') }>\n          { name }\n        </Link>\n      )\n    }\n\n    return leaf\n  }\n\n  /**\n   * Renders the children of the current node.\n   */\n  createChildren = () => {\n    const { depth, path, children } = this.props\n    return children.map(({ link, name, children }, index) => (\n      <Node\n        key={ index }\n        name={ name }\n        link={ link }\n        children={ children }\n        path={ path }\n        depth={ depth + 1 } />\n    ))\n  }\n\n  /**\n   * Returns the className associated with each folder.\n   */\n  toggleVariants = () => {\n    const { open, hover, active } = this.state\n    let classNames = ''\n    if (open) classNames += 'open '\n    if (hover) classNames += 'hover '\n    if (active) classNames += 'active '\n    return classNames\n  }\n\n  render() {\n    // destructure\n    const { open, hover } = this.state\n    const {\n      children,\n      depth,\n      toggleMenu,\n      menuOpen\n    } = this.props\n\n    return (\n      <li className={ (depth === 0 ? 'tree ' : '') + (depth === 1 ? 'first-gen ' : '')}>\n        <span onClick={() => depth === 0 && toggleMenu(open)}>\n          {children.length > 0 && \n          <div className={ 'toggle-container ' + this.toggleVariants() }>\n            <span className={ 'toggle ' + (!open ? 'collapsed ' : '') + (hover ? 'hover' : '')}/>\n          </div>}\n          { (menuOpen || depth !== 0) && this.createLeaf() }\n        </span>\n        {/* subnodes */}\n        <ul\n          className={ depth === 0 ? 'progeny' : ''}\n          style={ depth === 0 ? {marginLeft: '-2px'} : {}}>\n          { open && this.createChildren() }\n        </ul>\n      </li>\n    )\n  }\n}\n\n/**\n * Sets the default props.\n */\nNode.defaultProps = {\n  depth: 0,\n  children: []\n}\n\nexport default Node\n","import React from 'react'\n\nimport Node from './Node'\nimport '../../styles/FileTree.scss'\n\nconst FileTree = props => {\n  const {\n    path,\n    toggleMenu,\n    menuOpen,\n    branches: {\n      name,\n      link,\n      children\n    }\n  } = props\n\n  return (\n    <div className=\"FileTree\">\n      <Node\n        name={ name }\n        link={ link }\n        children={ children }\n        path={ path }\n        toggleMenu={ toggleMenu }\n        menuOpen={ menuOpen }/>\n    </div>\n  )\n}\n\nexport default FileTree","import React, { Component } from 'react'\nimport Lightbox from 'react-images'\nimport { css, StyleSheet } from 'aphrodite/no-important'\n\nexport default class Gallery extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n       lightboxIsOpen: false,\n       currentImage: 0\n    }\n  }\n\n  /**\n   * Opens lightbox at index of image clicked.\n   * \n   * @param {Number} index - index of image\n   * @param {Event} event - event object\n   */\n  openLightbox = (index, event) => {\n    event.preventDefault()\n    this.setState({\n      lightboxIsOpen: true,\n      currentImage: index\n    })\n  }\n\n  /**\n   * Closes lightbox.\n   */\n  closeLightbox = () => {\n    this.setState({ \n      lightboxIsOpen: false,\n      currentImage: 0\n    })\n  }\n\n  /**\n   * Goes to the previous image.\n   */\n  gotoPrev = () => this.setState(prevState => {\n    return { currentImage: prevState.currentImage - 1 }\n  })\n\n  /**\n   * Goes to the next image.\n   */\n  gotoNext = () => this.setState(prevState => {\n    return { currentImage: prevState.currentImage + 1 }\n  })\n\n  /**\n   * Goes to the image at index.\n   * \n   * @param {Number} index - the index of the image\n   */\n  gotoImage = index => this.setState({ currentImage: index })\n\n  /**\n   * If it's not the last image, calls gotoNext().\n   */\n  handleImageClick = () => {\n    if (this.state.currentImage === this.props.images.length - 1) return\n    this.gotoNext()\n  }\n\n  /**\n   * Renders thumbnail versions of the images.\n   */\n  renderGallery = () => {\n    const { images } = this.props\n    if (!images) return\n    const gallery = images.map((obj, i) => {\n\t\t\treturn (\n\t\t\t\t<a\n          className={css(classes.thumbnail, classes[obj.orientation])}\n\t\t\t\t\thref={obj.src}\n\t\t\t\t\tkey={i}\n\t\t\t\t\tonClick={(e) => this.openLightbox(i, e)}\n\t\t\t\t>\n          <img\n            src={obj.thumbnail}\n            width=\"250\"\n            alt=\"\"/>\n\t\t\t\t</a>\n\t\t\t)\n\t\t})\n\n\t\treturn (\n\t\t\t<div className={css(classes.gallery)}>\n\t\t\t\t{ gallery }\n\t\t\t</div>\n\t\t);\n  }\n\n  render() {\n    const {\n      images\n    } = this.props\n    const {\n      lightboxIsOpen,\n      currentImage\n    } = this.state\n    return (\n      <div className=\"Gallery\">\n        { this.renderGallery() }\n        <Lightbox\n          images={ images }\n          currentImage={ currentImage }\n          isOpen={ lightboxIsOpen }\n          onClickImage={ this.handleImageClick }\n          onClickNext={ this.gotoNext }\n          onClickPrev={ this.gotoPrev }\n          onClickThumbnail={ this.gotoImage }\n          onClose={ this.closeLightbox }\n        />\n      </div>\n    )\n  }\n}\n\nconst gutter = {\n\tsmall: 2,\n\tlarge: 4,\n};\nconst classes = StyleSheet.create({\n\tgallery: {\n\t\tmarginRight: -gutter.small,\n\t\toverflow: 'hidden',\n\n\t\t'@media (min-width: 500px)': {\n\t\t\tmarginRight: -gutter.large,\n\t\t},\n\t},\n\n\t// orientation\n\tlandscape: {\n\t\twidth: '30%',\n\t},\n\tsquare: {\n\t\tpaddingBottom: 0,\n\t\twidth: '40%',\n\n\t\t'@media (min-width: 500px)': {\n\t\t\tpaddingBottom: 0,\n\t\t},\n\t},\n});","import React from 'react'\nimport Gallery from '../components/Gallery'\n\nimport '../styles/Art.scss'\n\n// make google photos embedable at: https://ctrlq.org/google/photos/?_ga=2.128867980.1276491792.1554747504-750883585.1554747502\nconst IMAGES = [{\n  src: 'https://lh3.googleusercontent.com/boJuDEZIizbUCSnLwPlD-oMV2wfk9Wh9chQiCabWOda0N_x2ZbRL9866Y1_XUmiOtgfoSCnn8mHDMVwD9qXwWQaVtemP_AmSkWirmvYiABKbShIxkvqos21FGjRoZh03Eyiu-oFxkw=w2400',\n  thumbnail: 'https://lh3.googleusercontent.com/boJuDEZIizbUCSnLwPlD-oMV2wfk9Wh9chQiCabWOda0N_x2ZbRL9866Y1_XUmiOtgfoSCnn8mHDMVwD9qXwWQaVtemP_AmSkWirmvYiABKbShIxkvqos21FGjRoZh03Eyiu-oFxkw=w2400',\n  caption: 'Wanderer (16-bit)',\n  orientation: 'square'\n}, {\n  src: 'https://lh3.googleusercontent.com/NIwrNyz5soiMxo3r2U6eftM2vhNMZNIRpEzL-cF_MPX37mI_ZSn2WOvpZX_Cv1TAGnxgPK7PBWWrnX2I1UOOlr3Fbp_P5XNLI1c4NGQaE1YES9uqsdygXeXcGxz6M0lrQi-W6xzNwA=w2400',\n  thumbnail: 'https://lh3.googleusercontent.com/NIwrNyz5soiMxo3r2U6eftM2vhNMZNIRpEzL-cF_MPX37mI_ZSn2WOvpZX_Cv1TAGnxgPK7PBWWrnX2I1UOOlr3Fbp_P5XNLI1c4NGQaE1YES9uqsdygXeXcGxz6M0lrQi-W6xzNwA=w2400',\n  caption: 'Raindeer (16-bit)',\n  orientation: 'square'\n}, {\n  src: 'https://lh3.googleusercontent.com/dxdor_GpNGqNnHEJZP62L2yAtnUicsNZozKZPsN4ia2jcqrnsUa82UNySplXWHCND80V3QNdzwYYbQJi6CXmkQYTgAgzzUFMLdmg6mvlYAhUn9BpCBvqjWegzgi1i2-s67BSzUcpZA=w2400',\n  thumbnail: 'https://lh3.googleusercontent.com/dxdor_GpNGqNnHEJZP62L2yAtnUicsNZozKZPsN4ia2jcqrnsUa82UNySplXWHCND80V3QNdzwYYbQJi6CXmkQYTgAgzzUFMLdmg6mvlYAhUn9BpCBvqjWegzgi1i2-s67BSzUcpZA=w2400',\n  caption: 'Cherry tree (16-bit)',\n  orientation: 'square'\n}, {\n  src: 'https://lh3.googleusercontent.com/x0OKFo7GiMSHTpA75rGwPTp-KSH6RGeEm0aKkeB1zyqHHOkiA3KY-MpjfhT-lIuU4-WqHLFuWEMagl8jSxFR1odrD9VTAvB2MrDKr40WFclj5xVQNdwtNPnHnlWVxestqc4onXU0gQ=w2400',\n  thumbnail: 'https://lh3.googleusercontent.com/x0OKFo7GiMSHTpA75rGwPTp-KSH6RGeEm0aKkeB1zyqHHOkiA3KY-MpjfhT-lIuU4-WqHLFuWEMagl8jSxFR1odrD9VTAvB2MrDKr40WFclj5xVQNdwtNPnHnlWVxestqc4onXU0gQ=w2400',\n  caption: 'Self (pencil)',\n  orientation: 'square'\n}]\n\nconst Art = props => (\n  <div className=\"Art\">\n    <h2 className=\"header\">My Artwork</h2>\n    <Gallery\n      menu={ props.menu }\n      images={ IMAGES }/>\n  </div>\n)\n\nexport default Art","import React, { Component } from 'react'\n\nimport '../styles/App.scss'\n\nexport default class PDFViewer extends Component {\n\n  componentDidMount() {\n    this.props.menu.stow()\n  }\n\n  render() {\n    const { src } = this.props\n    return (\n      <embed\n        title=\"pdf\"\n        style={{ height: '100vh', width: '100vw' }}\n        src={ src }\n        type=\"application/pdf\"/>\n    )\n  }\n}","import React from 'react'\nimport PDFViewer from '../components/PDFViewer'\n\nconst Beached = props => (\n  <PDFViewer\n    menu={ props.menu }\n    src=\"documents/beached.pdf\"/>\n)\n\nexport default Beached","import React, { Component } from 'react'\n\nimport '../styles/Bio.scss'\n\nexport default class Bio extends Component {\n  /**\n   * Returns my age\n   */\n  getAge = () => new Date().getFullYear() - 1996\n  render() {\n    return (\n      <div className=\"Bio\">\n        <p>\n          <strong>Emmanuel Z. Price</strong>, {this.getAge()}, fanatical polyglottic<sup>*</sup> programmer compensating presently for (his own words) “lately-blooming, code-wise.” It was nineteen years before he even typed the words “Hello, world!” to give you a picture. But what started out as mere hobby quickly metastasized into full-blown obsession. Now, just a few years later, he builds websites for friends’ friends and says meaningless things like “This soggy code could use some refactoring” and wakes up in code-sweats<sup>&dagger;</sup> with problems’ solutions. There are other things in his life too, he assures you; he meditates daily and reads large cumbersome books and exercises occasionally. But in the gaps between obligations and activities you’ll likely find him bathed in the soft-blue of his computer’s screen, hacking away at puzzles of his own design. . .\n        </p>\n        <h5><sup>*</sup> In descending proficiency: JavaScript, HTML/CSS, Ruby, Scheme, Python, Java.</h5>\n        <h5><sup>&dagger;</sup> North American hacker argot for code-related perspirations.</h5>\n      </div>\n    )\n  }\n} ","import React from 'react'\n\nconst Cell = ({ xPos, yPos, paused, enlarged }) => (\n  <rect\n    className={'Cell ' + (paused ? 'paused ' : '')}\n    x={ xPos }\n    y={ yPos }\n    style={{\n      width: enlarged ? '14.7px' : '9.7px',\n      height: enlarged ? '14.7px' : '9.7px'\n    }}\n  />\n)\n\nexport default Cell","import React, { Component } from 'react'\nimport Cell from './Cell'\n// TODO: Change styling based on window.addEventListener('resize', callback)\nexport default class Life extends Component {\n  constructor(props) {\n    super(props)\n\n    // set svg height: 93vh;\n    //         width: 73vw;\n    // make col and row number dependent on svg offset width and height\n\n    /*\n    note: this is calculated from the height(600) and width(900)\n    of the grid divided by the size of each cell(15)\n    */\n    const cols = 92, // number of rows\n          rows = 44 // and columns in the grid \n\n\n    // returns a 2d array of false values\n    const blankGrid = () => new Array(cols).fill(null).map(() => new Array(rows).fill(null).map(() => false))\n    \n    this.state = {\n      cols,\n      rows,\n      height: 660,\n      width: 1380,\n      cellSize: 15,\n      paused: true,\n      generation: 0,\n      tick: 250, // time between each frame\n      grid: blankGrid(),\n      default: blankGrid(),\n      mouseIsDown: false,\n      penType: true,\n      enlarged: true,\n      config: { // preset cells\n        gosperGlider: [[1, 5],[1, 6],[2, 5],[2, 6],[11, 5],[11, 6],\n                      [11, 7],[12, 4],[12, 8],[13, 3],[13, 9],[14, 3],\n                      [14, 9],[15, 6],[16, 4],[16, 8],[17, 5],[17, 6],\n                      [17, 7],[18, 6],[21, 3],[21, 4],[21, 5],[22, 3],\n                      [22, 4],[22, 5],[23, 2],[23, 6],[25, 1],[25, 2],\n                      [25, 6],[25, 7],[35, 3],[35, 4],[36, 3],[36, 4]],\n        shruiken: [[30,33],[30,36],[31,37],[31,38],[30,39],[29,38],\n                      [29,37],[33,33],[34,34],[35,34],[36,33],[35,32],\n                      [34,32],[30,30],[31,29],[31,28],[30,27],[29,28],\n                      [29,29],[27,33],[26,34],[26,32],[25,32],[24,33],\n                      [25,34],[37,35],[28,40],[23,31],[32,26]].map(([x, y]) => [x+15, y-4]),\n        dragonfly: [[25,32],[26,32],[27,32],[28,32],[29,32],[30,32],\n                    [31,32],[32,32],[34,32],[35,32],[36,32],[37,32],\n                    [38,32],[42,32],[43,32],[44,32],[51,32],[52,32],\n                    [53,32],[54,32],[55,32],[56,32],[57,32],[59,32],\n                    [60,32],[61,32],[62,32],[63,32]].map(([x, y]) => [x, y-1]),\n        butterfly: [[45,27],[44,28],[46,28],[43,29],[47,29],[46,30],[44,30]],\n        ascension: [[45,27],[45,24],[44,25],[45,25],[46,25],[47,26],\n              [48,27],[48,28],[48,29],[47,29],[46,29],[44,29],\n              [43,29],[42,29],[42,28],[42,27],[43,26]].map(([x, y]) => [x, y+4]),\n        gammadion: [[44,29],[44,28],[45,28],[46,28],[46,29],[46,30],\n                    [45,30],[44,30]].concat([[30,36],[31,37],[31,38],\n                    [30,39],[29,38],[29,37],[33,33],[34,34],[35,34],\n                    [36,33],[35,32],[34,32],[30,30],[31,29],[31,28],\n                    [30,27],[29,28],[29,29],[27,33],[26,34],[26,32],\n                    [25,32],[24,33],[25,34],[37,35],[28,40],[23,31],\n                    [32,26]].map(([x, y]) => [x+15, y-4])),\n        megagammadion: [[44,29],[44,28],[45,28],[46,28],[46,29],[46,30],\n                        [45,30],[44,30],[45,31],[47,29],[45,27],[43,29]]\n                        .concat([[30,36],[31,37],[31,38],[30,39],[29,38],\n                        [29,37],[33,33],[34,34],[35,34],[36,33],[35,32],\n                        [34,32],[30,30],[31,29],[31,28],[30,27],[29,28],\n                        [29,29],[27,33],[26,34],[26,32],[25,32],[24,33],\n                        [25,34],[37,35],[28,40],[23,31],[32,26]].map(([x, y]) => [x+15, y-4]))\n      }\n    }\n  }\n\n  componentWillMount() {\n    // event listener checks if window is resized\n    window.addEventListener('resize', this.resizeGrid)\n  }\n\n  /**\n   * Resizes game of life on screen-size change.\n   */\n  resizeGrid = () => {\n    // get width of screen\n    const x = window.innerWidth\n    const width = x - 56 // accounts for left and right margins\n\n    // if both cellSizes divide evenly into new width\n    if (Number.isInteger(width / 15) && Number.isInteger(width / 10)) {\n      // get size of cell\n      const { cellSize } = this.state\n      // calculates number of columns (width / cellsize)\n      const cols = width / cellSize\n\n      // reset state\n      this.setState({\n        width,\n        cols,\n        grid: this.newGrid()\n        // reset grid\n      }, this.resetGrid)\n    }\n  }\n\n  /**\n   * Flips the value of the current cell\n   * \n   * @param {Number} x - the x-coordinate of the cell being set\n   * @param {Number} y - the y-coordinate of the cell being set\n   * @param {Boolean} drawCell - whether or not cell is being manually drawn\n   */\n  flipCell = (x, y, drawCell=false) => {\n    this.setState(prevState => {\n      return { \n        grid: prevState.grid.map((col, i) => col.map((cell, j) => {\n          // if at target coordinates (x, y), alter cell\n          if (i === x && j === y) {\n            // if cell is being drawn, return pen type\n            if (drawCell) return this.state.penType\n            // else reverse cell's state\n            return drawCell ? this.state.penType : !cell\n          }\n          // otherwise return cell\n          return cell\n        }))\n      }\n    })\n  }\n\n  /**\n   * Count the game's current cell population\n   */\n  countPopulation = () => this.state.grid.flat().filter(cell => cell === true).length\n\n  /**\n   * Prints the game's current cell population\n   */\n  printPopulation = () => {\n    // find the population\n    const population = this.countPopulation()\n    if (!this.state.paused && population === 0) this.resetGrid()\n\n    // if the population exceeds 100\n    if (population > 100) {\n      // returns a string in the form: '~<digit exceeding 100, floored to a multiple of 50'\n      // e.g., '~70' -- where the '~' character denotes 'approximately'\n      return '~' + +(Math.ceil(population/50.0) * 50)\n    } else {\n      return population\n    }\n  }\n\n  /**\n   * Count the number of TRUE neighbors around the current cell\n   * \n   * @param {Number} x - the x coordinate of the current cell\n   * @param {Number} y - the y coordinate of the current cell\n   * @param {Boolean} c - the value of the current cell\n   */\n  updateCell = (x, y, c) => {\n    const { grid } = this.state\n    let n = 0 // number of alive neighbors\n    const width = grid.length, // width and height of the grid, respectively\n          height = grid[0].length\n    \n    // loop through neighbors of current cell\n    for (let i = -1; i <= 1; i++) {\n      for (let j = -1; j <= 1; j++) {\n        // skip current cell\n        if (i === 0 && j === 0) continue\n\n        // store neighbor's x and y coordinates,\n        // add then mod coordinate by array-length to allow for wrap around\n        const nX = (x + i + width) % width, nY = (y + j + height) % height\n        // check if neighbor at coordinates is filled\n        if (grid[nX][nY]) n++\n\n        // if their are more than 3 living neighbors the cell dies\n        if (n > 3) return false\n      }\n    }\n    \n    // if there are 3 neighbors the cell lives\n    if (n === 3) return true\n    // if there are 2 neighbors the cell stays the same\n    if (n === 2) return c\n    // if there is less than 2 the cell dies\n    return false\n  }\n\n  /**\n   * Returns a new blank or randomized grid\n   * \n   * @param {Boolean} randomize - if true the new grid is randomized\n   */\n  newGrid = (randomize=false) => {\n    const { cols, rows } = this.state\n    // returns false vals\n    let cb = () => false\n    // if 'randomize' is true then mix in some trues\n    if (randomize) cb = () => Math.random() >= .8\n    // return a new grid\n    return new Array(cols).fill(null).map(() => new Array(rows).fill(null).map(() => cb()))\n  }\n\n  /**\n   * Configures the grid to the value of the select element\n   * \n   * @param {Event} preset - destructured event object of the form \"preset = event.target.value\", i.e.,\n   * the currently selected option\n   */\n  configureGrid = ({ target: { value: preset }}) => {\n    // pause game\n    this.setState({ paused: true })\n    \n    // if the preset is 'random' set rand to true\n    const rand = preset === 'random'\n    const blank = preset === 'blank' // same for blank\n\n    // set blank grid\n    const newGrid = this.newGrid(rand)\n\n\n    // if the preset is NOT 'random'\n    // loop through the preconfigured coordinates\n    // and set the newGrid at those coordinates to true\n    if (!rand && !blank) {\n      this.state.config[preset].forEach((coordPair) => {\n        const [x, y] = coordPair\n        newGrid[x][y] = true\n      })\n    }\n\n    // swap grids\n    this.setState({ grid: newGrid, default: newGrid })\n\n    // remove focus from select dropdown\n    this.configSelect.blur()\n  }\n\n  /**\n   * Create the next frame of the grid by applying the rules of the GoL to each cell.\n   * \n   * The rules are as follows: \"A cell is resurrected if three of its neighbors are living.\n   * It remains alive if two or three of its neighbors are living. Otherwise, it perishes.\"\n   */\n  updateGrid = () => this.setState(prevState => {\n      // 1. computes next generation\n      // 2. increments generationCount\n      return { \n        grid: prevState.grid.map((col, i) => col.map((cell, j) => this.updateCell(i, j, cell))),\n        generation: prevState.generation + 1\n      }\n  })\n\n  /**\n   * Draws cells on grid and calls next frame if the game is !paused\n   */\n  drawGrid = () => {\n    const {\n      grid,\n      paused,\n      enlarged,\n      tick,\n      cellSize\n    } = this.state\n\n    // if the game isn't paused call the next frame\n    setTimeout(() => {\n      if (!paused) {\n        this.updateGrid()\n      }\n    }, tick)\n    \n    // stores Cell components\n    const Cells = []\n    // traverse grid\n    grid.forEach((col, x) => col.forEach((cell, y) => {\n      // if Cell is alive\n      if (cell) {\n        // get it's position (coordinates multiplied by cell size)\n        const xPos = x * cellSize, yPos = y * cellSize\n        // and add the Cell to the array\n        Cells.push(\n          <Cell\n            key={ [x, y] }\n            xPos={ xPos }\n            yPos={ yPos }\n            paused={ paused }\n            enlarged={ enlarged }\n          />\n        )\n      }\n    }))\n\n    return Cells\n  }\n\n  /**\n   * Pauses and sets grid to current default\n   */\n  resetGrid = () => {\n    // pause game and bring generations to zero\n    this.setState({ paused: true, generation: 0 })\n\n    // slight delay\n    setTimeout(() => {\n      // reset grid to default\n      this.setState({ grid: this.state.default })\n    }, 150)\n  }\n\n  /**\n   * Returns an object containing the coordinates of an event\n   * \n   * @param {Event} e - object containing event data\n   */\n  getCoordPair = e => {\n    const svg = e.nativeEvent.target.ownerSVGElement\n    let pt = svg.createSVGPoint()\n    pt.x = e.nativeEvent.clientX\n    pt.y = e.nativeEvent.clientY\n    pt = pt.matrixTransform(svg.getScreenCTM().inverse());\n    return {\n      x: Math.floor(pt.x/this.state.cellSize),\n      y: Math.floor(pt.y/this.state.cellSize) \n    }\n  }\n\n  /**\n   * Changes the value of the cell at event-coordinates\n   * \n   * @param {Event} e - object containing event data\n   */\n  changeCell = e => {\n    // pause the GoL\n    this.setState({ paused: true })\n\n    // get coordinates of event\n    const { x, y } = this.getCoordPair(e)\n\n    console.log('[' + x + ',' + y + ']')\n\n    // reverse cell-state at coordinates\n    this.flipCell(x, y)\n  }\n\n  /**\n   * Attaches event listener to mouse movement\n   * @param {Event} e - object containing event data destructured in the form: x/y = e.nativeEvent.offset<X/Y>\n   */\n  _onMouseMove = ({ nativeEvent: { offsetX: x, offsetY: y }}) => {\n    // pause the GoL\n    this.setState({ paused: true })\n\n    // correct for cell-size\n    x = Math.floor(x/this.state.cellSize)\n    y = Math.floor(y/this.state.cellSize)\n\n    // create \"draw\" effect\n    if (this.state.mouseIsDown) this.flipCell(x, y, true) \n  }\n\n  /**\n   * If key pressed is shift key, changes penType\n   * If key pressed is spacebar, pause/play game\n   * @param {Event} e - object containing event data destructured in the form: e.shiftKey and e.keyCode\n   */\n  handleKeyDown = ({ shiftKey, keyCode }) => {\n    if (shiftKey) this.setState(prevState => ({ penType: !prevState.penType }))\n    if (keyCode === 32) this.setState(prevState => ({ paused: !prevState.paused }))\n  }\n\n  /**\n   * Changes cell size and density of grid\n   */\n  changeCellSize = () => {\n    this.setState(({ enlarged }) => {\n      // if the cells are currently enlarged\n      let rows, cols, cellSize\n      if (enlarged) {\n        // shrink cells; increase grid density\n        cols = 105\n        rows = 66\n        cellSize = 10\n      // otherwise,\n      } else {\n        // enlarge cells; reduce grid density\n        cols = 70\n        rows = 44\n        cellSize = 15\n      }\n\n      return {\n        cols,\n        rows,\n        cellSize,\n        enlarged: !enlarged,\n        paused: true\n      }\n    }, () => {\n      // reset grid\n      this.setState({ grid: this.newGrid() })\n    })\n  }\n\n  render() {\n    const {\n      height,\n      width,\n      cellSize,\n      penType,\n      paused,\n      enlarged,\n      mouseIsDown,\n      generation,\n      tick\n    } = this.state\n\n    return (\n      <div\n        className=\"Life\"\n        onKeyDown={ this.handleKeyDown }\n        tabIndex={ 0 }>\n        {/* Liquid crystal display for the miracle of Life */}\n        <svg\n          height={ height }\n          width={ width }\n          style={{ border: '1px solid black' }}>\n          {/* Injects units of Life into display */}\n          { this.drawGrid() }\n          {/* Creates grid pattern */}\n          <g>\n            <defs>\n              <pattern\n                id=\"grid\"\n                width={ cellSize }\n                height={ cellSize }\n                patternUnits=\"userSpaceOnUse\">\n                <path d={`M ${cellSize} 0 L 0 0 0 ${cellSize}`} fill=\"none\" stroke=\"gray\" strokeWidth=\"0.2\"/>\n              </pattern>\n            </defs>\n            {/* Clickable \"screen\" placed in foreground to detect mouse events without cells interfering */}\n            <rect\n              width=\"100%\"\n              height=\"100%\"\n              fill=\"url(#grid)\"\n              onMouseDown={e => {\n                this.setState({ mouseIsDown: true })\n                this.changeCell(e)\n              }}\n              onMouseUp={() => this.setState({ mouseIsDown: false })}\n              onMouseMove={ mouseIsDown ? this._onMouseMove.bind(this) : undefined }\n            />\n          </g>\n        </svg>\n        {/* Allows user to interact with the game */}\n        <div\n          className=\"Interface\"\n          style={{ width: width - 6 }}>\n          {/* Pause/Play button */}\n          <i\n            className={'fa fa-play ' + (paused ? '' : 'unpaused')}\n            id=\"start\"\n            title=\"pause/play\"\n            aria-hidden=\"true\"\n            onClick={() => this.setState(prevState => ({ paused: !prevState.paused }))}\n          />\n          {/* Reset button */}\n          <i\n            className=\"fas fa-undo\"\n            id=\"reset\"\n            title=\"reset\"\n            onClick={ this.resetGrid }\n          />\n          {/* Change cell size */}\n          <i\n            className={`fa fa-search-${enlarged ? 'minus' : 'plus'} magnifier`} \n            aria-hidden=\"true\"\n            onClick={ this.changeCellSize }\n          />\n          {/* Info tooltip */}\n          <i\n            className=\"fas fa-info-circle\"\n            id=\"tooltip\"\n          >\n            <p id=\"tooltiptext\">\n              <span id=\"generation\">generation: { generation }</span>\n              <span id=\"population\">population: { this.printPopulation() }</span>\n            </p>\n          </i>\n          {/* Preset options */}\n          <select\n            ref={select => {this.configSelect = select;}}\n            id=\"presets\"\n            onChange={ this.configureGrid }>\n            <optgroup label=\"presets\">\n              <option value=\"blank\">blank</option>\n              <option value=\"random\">random</option>\n              <option value=\"gosperGlider\">gosperGlider</option>\n              <option value=\"shruiken\">shruiken</option>\n              <option value=\"gammadion\">gammadion</option>\n              <option value=\"megagammadion\">megagammadion</option>\n              <option value=\"dragonfly\">dragonfly</option>\n              <option value=\"butterfly\">butterfly</option>\n              <option value=\"ascension\">ascension</option>\n            </optgroup>\n          </select>\n          {/* Current Pen Type - reverses onClick */}\n          <span\n            className={'pen ' + (penType ? 'draw' : '')}\n            onClick={() => this.setState(prevState => ({ penType: !prevState.penType }))}\n          >\n            <span>{ penType ? 'Draw' : 'Erase'}</span>\n          </span>\n          {/* Tick rate range */}\n          <label>Tick delay:\n            <input\n              id=\"tick-delay\"\n              type=\"range\"\n              min=\"50\"\n              max=\"450\"\n              step=\"50\"\n              list=\"steplist\"\n              name=\"tickrate\"\n              defaultValue=\"\"\n              onChange={({target: { value }}) => {\n                const isPause = paused\n                this.setState({ paused: true, tick: value })\n                if (!isPause) setTimeout(() => {\n                  this.setState({ paused: false })\n                }, 400)\n              }}/>\n            <datalist id=\"steplist\">\n              <option>50</option>\n              <option>100</option>\n              <option>150</option>\n              <option>200</option>\n              <option>250</option>\n              <option>300</option>\n              <option>350</option>\n              <option>400</option>\n              <option>450</option>\n            </datalist>\n            <em className=\"display-tickrate\">{ tick }ms</em>\n          </label>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nimport '../styles/Back.scss'\n\n/**\n * Links back to homepage.\n */\nconst Back = props => (\n  <Link\n    style={props.style || {}}\n    className=\"Back\"\n    to=\"/\">\n    &#8629;{props.showInitials ? 'EP' : ''}\n  </Link>\n)\n\nexport default Back","import React, { Component } from 'react'\n\nimport Life from '../components/gameoflife/Life'\nimport Back from '../components/Back'\n\nimport '../styles/Life.scss'\n\nexport default class CGOL extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.description = React.createRef()\n    this.game = React.createRef()\n  }\n  \n\n  componentDidMount() {\n    // stows side menu\n    this.props.menu.stow()\n    setTimeout(() => {\n      this.description.scrollIntoView({ behavior: 'smooth', block: 'start' })\n    }, 2000)\n  }\n  \n  render() {\n    return (\n      <div className=\"CGOL\">\n        {/* Link back to homepage */}\n        <Back style={{ fontSize: '22px', left: '3px' }}/>\n        {/* Scroll to this on up-arrow click */}\n        <div ref={r => (this.game = r)} />\n        {/* Game of Life */}\n        <Life scrollDown={ this.scrollToDescription } />\n        {/* Description of game */}\n        <div className=\"description\" ref={r => (this.description = r)}>\n          <h2>Conway's Game of Life</h2>\n          <div>\n            {/* Click this to scroll to top of screen */}\n            <span\n              className=\"toGame\"\n              onClick={() => this.game.scrollIntoView({ behavior: 'smooth' })}>\n              &#8673;\n            </span>\n            <p>\n              <strong>Life</strong>, a <span className=\"zero\">0</span>-player game devised by mathematician John Horton Conway, is an example of \"design and organization emerging in the absence of a designer.\" After providing an initial configuration, known as the <i>seed</i> of the game, nothing else need be done. Simply watch as the game's rules generate mesmerizing—and often surprising—patterns and behaviors.\n            </p>\n            <p className=\"special-features\">\n              (Special features of this version of Life: it is toroidal, meaning the edges wrap around; there are a number of preset seeds that one can choose from; game-speed can be altered by sliding the bar marked 'tick-rate'; one can stop the game and interfere, adding or removing cells by clicking or clicking/dragging on the grid.)\n            </p>\n            <hr width=\"96%\"/>\n            <h3>The Rules</h3>\n            <span className=\"note\">\n              A neighbor is defined as any horizontally, vertically, or diagonally adjacent square, giving each cell a total of 8 neighbors.\n            </span>\n            <ol>\n              <li>Any live cell with fewer than two live neighbors dies, as if by underpopulation.</li>\n              <li>Any live cell with two or three live neighbors lives on to the next generation.</li>\n              <li>Any live cell with more than three live neighbors dies, as if by overpopulation.</li>\n              <li>Any dead cell with exactly three live neighbors becomes a live cell, as if by reproduction.</li>\n            </ol>\n            <h3>How It Works</h3>\n            <p>\n              The initial pattern constitutes the seed of the system. The first generation is created by applying\n              the above rules simultaneously to every cell in the seed; births and deaths occur simultaneously, and\n              the discrete moment at which this happens is sometimes called a tick. Each generation is a pure function\n              of the preceding one. The rules continue to be applied repeatedly to create further generations.\n            </p>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n","import React from 'react'\nimport PDFViewer from '../components/PDFViewer'\n\nconst ColdCuts = props => (\n  <PDFViewer\n    menu={ props.menu }\n    src=\"documents/cold_cuts.pdf\"/>\n)\n\nexport default ColdCuts","import React from \"react\"\n\nimport '../styles/Project.scss'\n\nconst Concatenate = props => (\n  <div className=\"Project\">\n    <div className=\"inner\">\n      <article itemProp=\"text\">\n        <h1>Concatenate</h1>\n        <p>\n          The client side of an app designed to display progress. Click{\" \"}\n          <a\n            href=\"https://naturalbornchiller.github.io/concatenate-client/#/\"\n            title=\"concatenate-client\">\n             here\n          </a>{\" \"}\n          to try it out!\n        </p>\n        <p>\n          Or click{\" \"}\n          <a\n            href=\"http://github.com/naturalbornchiller/concatenate-api\"\n            title=\"concatenate-api\"\n          >\n            here\n          </a>{\" \"}\n          to view the server side repository.\n        </p>\n        <hr />\n        <p>\n          Concatenate is a simple but effective way for users to track the\n          repetition of tasks and form habits.\n        </p>\n        <p>\n          <a\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n            href=\"https://user-images.githubusercontent.com/43046847/53427231-92b9ec00-39b6-11e9-9482-e10dc9ca9c68.png\"\n          >\n            <img\n              src=\"https://user-images.githubusercontent.com/43046847/53427231-92b9ec00-39b6-11e9-9482-e10dc9ca9c68.png\"\n              alt=\"screenshot\"\n              style={{ maxWidth: \"100%\" }}\n            />\n          </a>\n        </p>\n        <h2>\n          The concept is simple:\n        </h2>\n        <ol>\n          <li>A new user (\"The User\") logs into our app.</li>\n          <li>\n            The User adds one (or more) new daily task(s) e.g., \"write\",\n            \"program\", \"meditate\", etc. to be tracked.\n          </li>\n          <li>\n            Tracked tasks (called \"Chains\") last for each day that The User logs\n            in and clicks \"concat!\" on the daily task they have performed. In this\n            way, Chains, marked by passing days, grow longer, providing users with\n            a visual representation of incremental progress. If The User fails to\n            log onto the app and continue the Chain, the Chain is broken, forcing\n            her to start over.\n          </li>\n          <li>See how long you can keep it going!</li>\n        </ol>\n        <h3>\n          Planning process / problem solving strategies\n        </h3>\n        <p>\n          The idea for this app stems from advice that developer and comic Brad\n          Isaac received from Jerry Seinfield in a comedy club. Isaac tells it\n          like this:\n        </p>\n        <blockquote>\n          <p>\n            Years ago when Seinfeld was a new television show, Jerry Seinfeld was\n            still a touring comic. At the time, I was hanging around clubs doing\n            open mic nights and trying to learn the ropes. One night I was in the\n            club where Seinfeld was working, and before he went on stage, I saw my\n            chance. I had to ask Seinfeld if he had any tips for a young comic.\n            What he told me was something that would benefit me a lifetime...\n          </p>\n          <p>\n            He said the way to be a better comic was to create better jokes and\n            the way to create better jokes was to write every day. But his advice\n            was better than that. He had a gem of a leverage technique he used on\n            himself and you can use it to motivate yourself—even when you don't\n            feel like it.\n          </p>\n          <p>\n            He revealed a unique calendar system he uses to pressure himself to\n            write. Here's how it works.\n          </p>\n          <p>\n            He told me to get a big wall calendar that has a whole year on one\n            page and hang it on a prominent wall. The next step was to get a big\n            red magic marker.\n          </p>\n          <p>\n            He said for each day that I do my task of writing, I get to put a big\n            red X over that day. \"After a few days you'll have a chain. Just keep\n            at it and the chain will grow longer every day. You'll like seeing\n            that chain, especially when you get a few weeks under your belt. Your\n            only job next is to not break the chain.\"\n          </p>\n          <p>\n            \"Don't break the chain,\" he said again for emphasis.{\" \"}\n            <a\n              className=\"src\"\n              href=\"https://lifehacker.com/jerry-seinfelds-productivity-secret-281626\"\n              title=\"source\"\n              rel=\"nofollow\"\n            >\n              <sup>1</sup>\n            </a>\n          </p>\n        </blockquote>\n        <p>\n          It took me a while to realize the importance of incremental growth, but\n          now that I do, I can't overstate its benefits enough. By doing something\n          once a day, even with just a little effort, a person can transform themselves, bit by bit.\n        </p>\n        <hr/>\n        <p>\n          I began the process of building an app from the ground up. I started\n          with user stories and ERDs, picked which tools to use, and began to\n          articulate, on paper first, then programmatically, how the data might be\n          stored, then retrieved and displayed for the client.\n        </p>\n        <p>\n          Because I needed to devise a way of storing data that evolves with time,\n          I started with the server. This enterprise was more difficult than I\n          initially imagined for two reasons:\n        </p>\n        <ol>\n          <li>\n            Using Express with Mongoose is hard. Persisting evolving nested data\n            in Mongo is already a pain, but worse I found the Mongoose documentation\n            to be abysmal. There are some good unofficial docs that explain things\n            much cleared so I'd keep an eye out for those.\n          </li>\n          <li>\n            Dealing with JavaScript's Date objects is a pain. I'm not that\n            quantitative to begin with, and having to manipulate Date objects and\n            then convert from milliseconds to minutes/hours/days, from strings to\n            numbers and back, leaves a ton of room for error. Which is not to say\n            I didn't enjoy solving date/time puzzles or taming the legendary\n            Mongoose. In fact, I very much did.\n            (<strong>Edit:</strong> I have since discovered Moment.js.)\n          </li>\n        </ol>\n        <p>\n          The next hurdle I volunteered myself to overcome was learning React. I'm\n          glad I spent time familiarizing myself with the library, as it's one I want\n          to use for future projects; however I really could have stuck to Vanilla\n          JS for this one. All in all though, I really got to see the power of the\n          React, how, with state and props, you can fluidly circulate data throughout\n          the body of a program.\n        </p>\n        <p>\n          Most of my process involves trial-and-error. I stare at a big problem\n          (How to represent the chains programmatically?) and parse it into\n          related subproblems (What is a chain? How is a chain broken? How is it\n          extended? How can I efficiently store it in the backend?). I find that,\n          by solving subproblems in succession, I can effectively answer\n          whatever superproblem I'm wrestling with (how to build a website for example)\n          —and I did so in this case mostly by playing until the pieces fit..\n        </p>\n        <p>\n          Lastly, this time around, I learned a lot about debugging. The secret is\n          CONSOLE LOG EVERYTHING. By doing so your program is laid bare—you can\n          see exactly what each variable holds and how it is mutated by the\n          functions you <i>thought</i> did something completely different..\n        </p>\n        <h3>\n          Goals for Future Incarnations\n        </h3>\n        <p>\n          Ideally, I'd like for this to be an app, with reminders and whatnot. Bar\n          that, I want to display the \"chains\" on a full-year calendar, rather\n          than as discrete threads. Also, I'd like to present the user with more\n          data on their chains (totalDaysTracked, combinedChainLength, etc.).\n          Finally I'd like to make the UI more satisfying to view and use.\n        </p>\n        <h3>\n          Technologies Used\n        </h3>\n        <ul>\n          <li>Backend: Node with Express.js and Mongoose</li>\n          <li>Frontend: HTML, SCSS, JavaScript, React</li>\n        </ul>\n      </article>\n    </div>\n  </div>\n)\n\nexport default Concatenate\n","import React, { Component } from 'react'\n\nimport { StyleSheet, css } from 'aphrodite/no-important'\n\nclass TextRotator extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      facetext: [],\n      animation: 0,\n      idx: 4\n    }\n  }\n\n  componentWillMount() {\n    // init keyframes\n    this.spinKeyframes = this.initializeKeyframes()\n    // init words and set spinrate\n    this.setState({ facetext: this.props.words.slice(0, 4) })\n  }\n\n\n  componentDidMount() {\n    // this.rotateText() calls itself until this is false\n    this._isMounted = true\n    // start animation\n    this.rotateText()\n  }\n\n  componentWillUnmount() {\n    // halts this.rotateText() recursion\n    this._isMounted = false\n  }\n\n  /**\n   * Uses props to initialize spin animation.\n   */\n  initializeKeyframes = () => {\n    const { reverseRotation } = this.props\n    const sign = reverseRotation ? -1 : 1\n    const spin = {}\n    let deg = 0\n    for (let i = 0; i < 4; i++) {\n      spin[i] = {}\n      spin[i]['0%'] = { transform: `rotateX(${sign*deg}deg)` }\n      spin[i]['90%'] = { transform: `rotateX(${sign*deg}deg)` }\n      deg += 90\n      spin[i]['100%'] = { transform: `rotateX(${sign*deg}deg)` }\n    }\n    return spin\n  }\n\n  /**\n   * Takes css value in the form '100px' and outputs: ['100', 'px'].\n   * \n   * @param {String} css - css value to be parsed.\n   */\n  parseCSSVal = css => {\n    const cssVal = css.split('').filter(ch => isNaN(ch) === false).join(''), // filter: is a Number\n          cssUnit = css.split('').filter(ch => isNaN(ch) === true).join('')  // filter: is Not a Number\n    return [cssVal, cssUnit]\n  }\n\n  /**\n   * Returns classes for inline styling!\n   */\n  styles = () => {\n    const {\n      fontSize,\n      positionRight,\n      positionBottom,\n      positionLeft,\n      positionTop,\n      height,\n      width,\n      spinRate,\n      prismBorder,\n      prismBoxShadow,\n      backgroundColor,\n      fontColor\n    } = this.props\n    const {\n      animation\n    } = this.state\n\n    // break val up into number and unit, e.g., [ '100', 'px' ]\n    const [ heightValue, heightUnits ] = this.parseCSSVal(height)\n    // halfs value and combines with units\n    const halfHeight = heightValue / 2 + heightUnits\n\n    // styles\n    const styles = StyleSheet.create({\n      Prism: {\n        position: 'absolute',\n        perspective: '800px',\n        perspectiveOrigin: `50% ${halfHeight}`,\n        right: positionRight,\n        left: positionLeft,\n        bottom: positionBottom,\n        top: positionTop,\n        fontSize\n      },\n      rectangle: {\n        transformOrigin: `0 ${halfHeight}`,\n        margin: '0 auto',\n        position: 'relative',\n        transformStyle: 'preserve-3d',\n        width: width\n      },\n      spin: {\n        animationName: [this.spinKeyframes[animation]],\n        animationTimingFunction: 'ease',\n        animationDuration: `${spinRate}s`,\n        animationFillMode: 'forwards'\n      },\n      side: {\n        position: 'absolute',\n        border: `1px solid ${prismBorder}`,\n        boxShadow: `inset 0 0 20px ${prismBoxShadow}`,\n        lineHeight: '1.1em',\n        paddingLeft: '7px',\n        color: fontColor,\n        backgroundColor,\n        width,\n        height\n      },\n      face1: {\n        transform: `translateZ(${halfHeight})`\n      },\n      face2: {\n        transform: `rotateX(-270deg) translateY(-${halfHeight})`,\n        transformOrigin: 'top center'\n      },\n      face3: {\n        transform: `translateZ(-${halfHeight}) rotateX(180deg)`\n      },\n      face4: {\n        transform: `rotateX(-90deg) translateY(${halfHeight})`,\n        transformOrigin: 'bottom center'\n      }\n    })\n    return styles\n  }\n\n  /**\n   * Rotates text and swaps a word.\n   */\n  rotateText = () => {\n    const { spinRate } = this.props\n    // convert rate to ms\n    const delay = spinRate * 1000\n    // set delay\n    setTimeout(() => {\n      // rotate text\n      this.setState(prevState => {\n        let { facetext, animation, idx } = prevState\n        const { words } = this.props\n        // const newtext = [...facetext]\n        const len = words.length // length of words\n        // if more than four words,\n        // then replace a word from TxtRot with new word from words\n        if (len > 4) {\n          // index of hidden face\n          const h = (animation - 1) % len\n          // if the word is on TxtRot, get next word\n          while (facetext.includes(words[idx]))\n            idx = (idx + 1) % len\n          // set new word to hidden face\n          facetext[h] = words[idx]\n        }\n        return {\n          facetext,\n          idx: (idx + 1) % len, // inc index again\n          animation: (animation + 1) % 4 // inc animation\n        }\n      })\n\n      // if component is mounted, recurse\n      if (this._isMounted) this.rotateText()\n    }, delay)\n  }\n\n  render() {\n    // destructure\n    const { facetext } = this.state\n    const { affixed } = this.props\n    const styles = this.styles()\n    const {\n      Prism,\n      rectangle,\n      spin, \n      side\n    } = styles\n\n    // generate faces\n    const Faces = facetext.map((ft, i) => {\n      // if prop 'affixed' was passed, set face1 to affixed\n      if (affixed && i === 0) ft = affixed\n      return (\n        <div\n          key={i}\n          className={css(side, styles[`face${i + 1}`])}>\n            { ft }.\n        </div>\n      )\n    })\n\n    // render component\n    return (\n      <div className={css(Prism)}>\n        <div className={css(rectangle, spin)}>\n          { Faces }\n        </div>\n      </div>\n    )\n  }\n}\n\nTextRotator.defaultProps = {\n  affixed: '',\n  reverseRotation: false,\n  fontSize: '50px',\n  fontColor: 'black',\n  backgroundColor: 'white',\n  positionRight: '-58px',\n  positionTop: '6px',\n  positionLeft: 'unset',\n  positionBottom: 'unset',\n  height: '64px',\n  width: '370px',\n  spinRate: 2.5,\n  prismBorder: 'unset',\n  prismBoxShadow: 'unset',\n}\n\nexport default TextRotator","const epithets = [\n  'web developer',\n  'meditator',\n  'creative',\n  'gamer',\n  'chess-player',\n  'mentor',\n  'hiker',\n  'book-reader',\n  'logophile',\n  'visionary'\n]\n\nexport default epithets","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\n\nimport TextRotator from '../components/TextRotator'\nimport epithets from '../config/epithets'\n\nimport '../styles/Home.scss'\n\nexport default class Home extends Component {\n  \n  componentWillMount() {\n    // stows side menu\n    this.props.menu.stow()\n  }\n\n  componentWillUnmount() {\n    // unstows side menu\n    this.props.menu.unstow()\n  }\n\n  render() {\n    return (\n      <div className=\"Home\">\n        <div className=\"container\">\n          <Link\n            className=\"link\"\n            to=\"/info/bio\">\n            Emmanuel Price, \n          </Link>\n          <TextRotator\n            words={ epithets }\n            positionRight={ '-105px' }\n            spinRate={ 4.2 }\n            reverseRotation/>\n        </div>\n      </div>\n    )\n  }\n}","import React from 'react'\n\nconst Quote = props => (\n  <div className=\"Quote\">\n    <span className=\"author\">\n      { props.author }\n    </span>:\n    <blockquote className=\"content\">\n      { props.content.map((q, i) => (\n        <React.Fragment key={i}>\n          {/* Separates multiple quotes from same author */}\n          { !!i && <hr align=\"left\"/>}\n          <p>\n            {/* Breaks up quote with linebreaks if '\\n' is present in quote */}\n            { q.split('\\n').map((line, j) => (\n              <React.Fragment key={j}>\n                {line}<br/>\n              </React.Fragment>\n            )) }\n          </p>\n          {/* <p key={i}>{ q.split('\\n').join(<br/>) }</p> */}\n        </React.Fragment>\n      ))}\n    </blockquote>\n  </div>\n)\n\nexport default Quote","const quotes = [{\n  author: 'John Stuart Mill',\n  content: [\"Ask yourself whether you are happy and you cease to be so.\"]\n}, {\n  author: 'Daniel Kahneman',\n  content: ['A reliable way to make people believe in falsehoods is frequent repetition, because familiarity is not easily distinguished from truth. Authoritarian institutions and marketers have always known this fact.']\n}, {\n  author: 'Antoine-Marie-Roger de Saint-Exupery',\n  content: ['Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.']\n}, {\n  author: 'Steve Jobs',\n  content: ['The minute that you understand that you can poke life and actually something will, you know if you push in, something will pop out the other side, that you can change it, you can mold it. That’s maybe the most important thing. It’s to shake off this erroneous notion that life is there and you’re just gonna live in it, versus embrace it, change it, improve it, make your mark upon it.']\n}, {\n  author: 'George Bernard Shaw',\n  content: ['A life spent making mistakes is not only more honorable, but more useful than a life spent doing nothing.', 'The reasonable man adapts himself to the world: the unreasonable one persists in trying to adapt the world to himself. Therefore all progress depends on the unreasonable man.', 'Youth is wasted on the young.']\n}, {\n  author: 'Terence Mckenna',\n  content: [\"We have to create culture, don't watch TV, don't read magazines, don't even listen to NPR. Create your own roadshow. The nexus of space and time where you are now is the most immediate sector of your universe, and if you're worrying about Michael Jackson or Bill Clinton or somebody else, then you are disempowered, you're giving it all away to icons, icons which are maintained by an electronic media so that you want to dress like X or have lips like Y. This is shit-brained, this kind of thinking . . . You want to reclaim your mind and get it out of the hands of the cultural engineers who want to turn you into a half-baked moron consuming all this trash that's being manufactured out of the bones of a dying world.\"]\n}, {\n  author: 'John F. Kennedy',\n  content: ['Too often we enjoy the comfort of opinion without the discomfort of thought.']\n}, {\n  author: 'Lao Tzu',\n  content: [\"Life is a series of natural and spontaneous changes. Don't resist them; that only creates sorrow. Let reality be reality. Let things flow naturally forward in whatever way they like.\", 'A good traveler has no fixed plans and is not intent on arriving.', \"Time is a created thing. To say 'I don't have time,' is like saying, 'I don't want to.'\", \"The truth is not always beautiful, nor beautiful words the truth.\", \"Silence is a source of great strength.\"]\n}, {\n  author: 'E. W. Dijkstra',\n  content: ['Always try to work as closely as possible at the boundary of your abilities. Do this, because it is the only way of discovering how that boundary should be moved forward.', 'Perfecting oneself is as much unlearning as it is learning.']\n}, {\n  author: 'Robert Frost',\n  content: ['In three words I can sum up everything I\\'ve learned about life: it goes on.']\n}, {\n  author: 'John Locke',\n  content: ['The acts of the mind, wherein it exerts its power over simple ideas, are chiefly these three: 1. Combining several simple ideas into one compound one, and thus all complex ideas are made. 2. The second is bringing two ideas, whether simple or complex, together, and setting them by one another so as to take a view of them at once, without uniting them into one, by which it gets all its ideas of relations. 3. The third is separating them from all other ideas that accompany them in their real existence: this is called abstraction, and thus all its general ideas are made.']\n}, {\n  author: 'Alan Watts',\n  content: ['We seldom realize, for example that our most private thoughts and emotions are not actually our own. For we think in terms of languages and images which we did not invent, but which were given to us by our society.']\n}, {\n  author: 'Philip K. Dick',\n  content: ['Reality is that which, when you stop believing in it, doesn\\'t go away.', 'Just because something bears the aspect of the inevitable one should not, therefore, go along willingly with it.']\n}, {\n  author: 'Epicurus',\n  content: ['Is God willing to prevent evil, but not able? Then he is not omnipotent.\\nIs he able, but not willing? Then he is malevolent.\\nIs he both able and willing? Then whence cometh evil?\\nIs he neither able nor willing? Then why call him God?']\n}, {\n  author: 'Marcus Aurelius',\n  content: ['Everything we hear is an opinion, not a fact. Everything we see is a perspective, not the truth.', 'When another blames you or hates you, or people voice similar criticisms, go to their souls, penetrate inside and see what sort of people they are. You will realize that there is no need to be racked with anxiety.']\n}, {\n  author: 'Charles Bukowski',\n  content: [\"Some people never go crazy. What truly horrible lives they must lead.\", \"Sometimes you climb out of bed in the morning and you think, I'm not going to make it, but you laugh inside — remembering all the times you've felt that way.\", \"There's a bluebird in my heart that wants to get out\\nbut I'm too tough for him,\\nI say, stay in there, I'm not going to let anybody see you.\"]\n}, {\n  author: 'Ernest Hemingway',\n  content: [\"There is no friend as loyal as a book.\"]\n}, {\n  author: 'Oscar Wilde',\n  content: [\"Most people are other people. Their thoughts are someone else's opinions, their lives a mimicry, their passions a quotation.\", \"Be yourself; everyone else is already taken.\"]\n}, {\n  author: 'Franz Kafka',\n  content: [\"I think we ought to read only the kind of books that wound or stab us. If the book we're reading doesn't wake us up with a blow to the head, what are we reading for? So that it will make us happy, as you write? Good Lord, we would be happy precisely if we had no books, and the kind of books that make us happy are the kind we could write ourselves if we had to. But we need books that affect us like a disaster, that grieve us deeply, like the death of someone we loved more than ourselves, like being banished into forests far from everyone, like a suicide. A book must be the axe for the frozen sea within us. That is my belief.\", \"I usually solve problems by letting them devour me.\"]\n}, {\n  author: 'Mawlana Jalal-al-Din Rumi',\n  content: [\"Raise your words, not voice. It is rain that grows flowers, not thunder.\", \"Your task is not to seek for love, but merely to seek and find all the barriers within yourself that you have built against it.\"]\n}, {\n  author: 'Paulo Coelho',\n  content: [\"A child can teach an adult three things: to be happy for no reason, to always be busy with something, and to know how to demand with all his might that which he desires.\"]\n}, {\n  author: 'Frank Zappa',\n  content: [\"A mind is like a parachute. It doesn’t work if it is not open.\", \"Information is not knowledge. Knowledge is not wisdom. Wisdom is not truth. Truth is not beauty. Beauty is not love. Love is not music. Music is THE BEST.\"]\n}, {\n  author: 'Alfred Korzybski',\n  content: [\"The map is not the territory.\"]\n}].sort((a, b) => { // sort alphabetically by first name\n  if (b.author > a.author) {\n    return -1\n  } else if (b.author < a.author) {\n    return 1\n  }\n  return 0\n})\n\nexport default quotes","import React from 'react'\nimport Quote from '../components/Quote'\nimport quotes from '../config/quotes'\nimport '../styles/Quotes.scss'\n\nconst Quotes = () => (\n  <div className=\"Quotes\">\n    <div className=\"display\">\n      { quotes.map((q, i) => (\n        <Quote\n          key={ i }\n          url={ q.url }\n          author={ q.author }\n          content={ q.content }/>\n      ))}\n    </div>\n  </div>\n)\n\nexport default Quotes","import React from 'react'\nimport PDFViewer from '../components/PDFViewer'\n\nconst Resume = props => (\n  <PDFViewer\n    menu={ props.menu }\n    src=\"documents/resume.pdf\"/>\n)\n\nexport default Resume","import React from 'react'\n\nconst Square = props => (\n  <button\n    className={\"Square \" + props.className}\n    onClick={ props.onClick }>\n    { props.value }\n  </button>\n)\n\nexport default Square\n","import React, { Component } from 'react'\n\nimport Square from './Square'\n\nexport default class Board extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      vsCPU: false,\n      level: '1'\n    }\n  }\n\n  renderSquare = i => {\n    const {\n      winSquares,\n      cpu,\n      squares,\n      isTie,\n      xIsNext,\n      onClick\n    } = this.props\n    const win = winSquares.includes(i) ? 'win' : ''\n    const cpuWin = cpu.isOpponent && winSquares.includes(i) && squares[i] === 'O' ? 'cpu-win' : ''\n    const tie = winSquares.length < 3 && isTie ? 'tie' : ''\n    const clickable = (xIsNext && !squares[i]) ||  (!cpu.isOpponent && !squares[i]) ? 'clickable' : ''\n    return (\n      <Square\n        key={ i }\n        className={ `${win} ${cpuWin} ${tie} ${clickable}` }\n        value={ squares[i] }\n        onClick={() => cpu.isOpponent && !xIsNext ? undefined : onClick(i)}/>\n    )\n  }\n  \n  render() {\n    const { status, moves, cpu, changeOpponent, changeLevel } = this.props\n    return (\n      <div className=\"Board\">\n        {/* Interface */}\n        <div className=\"interface\">\n          {/* Choose opponent */}\n          <label className=\"switch\">\n            <input\n              type=\"checkbox\"\n              checked={ cpu.isOpponent }\n              onChange={() => changeOpponent()}/>\n            <span className=\"slider round\" />\n            <span className=\"versus\">vs computer</span>\n          </label>\n          {/* If opponent is CPU, choose difficulty */}\n          <div className={\"level \" + (!cpu.isOpponent ? 'hidden' : '')}>\n            <label>\n              <input\n                className={\"choice \" + (cpu.isOpponent ? 'clickable' : '')}\n                type=\"radio\"\n                checked={ cpu.level === '1' }\n                value=\"1\"\n                onChange={e => changeLevel(e)}/>Facile\n            </label>\n            <label>\n              <input\n                className={\"choice \" + (cpu.isOpponent ? 'clickable' : '')}\n                type=\"radio\"\n                checked={ cpu.level === '2' }\n                value=\"2\"\n                onChange={e => changeLevel(e)}/>Moderate\n            </label>\n            <label>\n              <input\n                className={\"choice \" + (cpu.isOpponent ? 'clickable' : '')}\n                type=\"radio\"\n                checked={ cpu.level === '3' }\n                value=\"3\"\n                onChange={e => changeLevel(e)}/>Unbeatable\n            </label>\n          </div>\n          {/* Show current game's history */}\n          <ol>History:{ moves }</ol>\n        </div>\n        {/* Gameboard */}\n        <div className=\"row\">\n          { this.renderSquare(0) }\n          { this.renderSquare(1) }\n          { this.renderSquare(2) }\n        </div>\n        <div className=\"row\">\n          { this.renderSquare(3) }\n          { this.renderSquare(4) }\n          { this.renderSquare(5) }\n        </div>\n        <div className=\"row\">\n          { this.renderSquare(6) }\n          { this.renderSquare(7) }\n          { this.renderSquare(8) }\n        </div>\n        {/* Status of game */}\n        <div className=\"status\">{ status }</div>\n      </div>\n    )\n  }\n}\n","import Art from '../views/Art'\nimport Beached from '../views/Beached'\nimport Bio from '../views/Bio'\nimport CGOL from '../views/CGOL'\nimport ColdCuts from '../views/ColdCuts'\nimport Concatenate from '../views/Concatenate'\nimport Home from '../views/Home'\nimport Quotes from '../views/Quotes'\nimport Resume from '../views/Resume'\nimport TicTacToe from '../views/TicTacToe'\n\nconst routes = [{\n  path: '/',\n  view: Home,\n  name: 'Home'\n}, {\n  path: '/info/bio',\n  view: Bio,\n  name: 'Bio'\n}, {\n  path: '/code/life',\n  view: CGOL,\n  name: 'Life'\n}, {\n  path: '/code/tictactoe',\n  view: TicTacToe,\n  name: 'TicTacToe'\n}, {\n  path: '/other/quotes',\n  view: Quotes,\n  name: 'Quotes'\n}, {\n  path: '/code/concat',\n  view: Concatenate,\n  name: 'Concat'\n}, {\n  path: '/other/writing/cold_cuts.pdf',\n  view: ColdCuts,\n  name: 'ColdCuts'\n}, {\n  path: '/other/writing/beached.pdf',\n  view: Beached,\n  name: 'Beached'\n}, {\n  path: '/other/art',\n  view: Art,\n  name: 'Art'\n}, {\n  path: '/info/resume.pdf',\n  view: Resume,\n  name: 'Resume'\n}]\n\nexport default routes","import React, { Component } from 'react'\n\nimport Board from '../components/tictactoe/Board'\nimport Back from '../components/Back'\n\nimport '../styles/TicTacToe.scss'\n\nexport default class TicTacToe extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      history: [{\n        squares: Array(9).fill(null)\n      }],\n      stepNumber: 0,\n      xIsNext: true,\n      cpu: {\n        isOpponent: false,\n        level: '1'\n      }\n    }\n  }\n\n  componentDidMount() {\n    // stows side menu\n    this.props.menu.stow()\n  }\n\n  /**\n   * Calculates winner of game.\n   * \n   * @param {Array} squares - tictactoe board\n   */\n  calculateWinner = squares => {\n    // winning combinations\n    const lines = [\n      [0, 1, 2],\n      [3, 4, 5],\n      [6, 7, 8],\n      [0, 3, 6],\n      [1, 4, 7],\n      [2, 5, 8],\n      [0, 4, 8],\n      [2, 4, 6],\n    ]\n    const win = {\n      token: null,\n      combo: [null]\n    }\n    // iterate through winning combos\n    for (let i = 0; i < lines.length; i++) {\n      // store indices\n      const [a, b, c] = lines[i]\n      // if the square at each index is equal and NOT empty\n      if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n        // adds values to winObj\n        win.token = squares[a]\n        win.combo = [a, b, c]\n        // return the winObj\n        return win\n      }\n    }\n    // otherwise there is no winner\n    return win\n  }\n\n  /**\n   * If square at index is empty, adds current token.\n   * \n   * @param {Number} i - index of square\n   */\n  handleClick = i => {\n    // copy most recent game\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\n    const current = history[history.length - 1]\n    const squares = [...current.squares]\n    \n    // exit if game is over OR square is filled\n    if (this.calculateWinner(squares).token || squares[i]) return\n    \n    // add token to square\n    squares[i] = this.state.xIsNext ? 'X' : 'O'\n\n    // setState\n    this.setState(prevState => {\n      return {\n        history: history.concat([{\n          squares\n        }]),\n        stepNumber: prevState.stepNumber + 1,\n        xIsNext: !prevState.xIsNext\n      }\n    }, () => {\n      setTimeout(() => {\n        this.makeComputerMove()\n      }, 1200)\n    })\n  }\n\n  /**\n   * Makes computer's move.\n   */\n  makeComputerMove = () => {\n    const history = this.state.history.slice(0, this.state.stepNumber + 1)\n    const current = history[history.length - 1]\n    // copy current tictactoe board\n    const squares = [...current.squares]\n    // get available moves\n    const availableSquares = this.getAvailableMoves(squares)\n\n    // EXIT procedure if:\n    if (!this.state.cpu.isOpponent || // computer is not on\n      this.calculateWinner(squares).token || // or game is won\n      availableSquares.length === 0 || // or game is tie\n      this.state.xIsNext) return // or HU has next move\n\n    // get index of rand available move\n    const rand = availableSquares[this.getRandIndex(availableSquares.length)]\n\n    switch (this.state.cpu.level) {\n      case '2': // challenging\n        const win = this.winPossible([...squares])\n        if (win > -1) {\n          squares[win] = 'O'\n        } else {\n          squares[rand] = 'O'\n        }\n        break\n      case '3': // impossible\n        // get best move\n        const { index } = this.minimax([...squares], 'O')\n        squares[index] = 'O'\n        break\n      default: // facile\n        // computer makes random move\n        squares[rand] = 'O'\n        break\n    }\n\n    this.setState(prevState => {\n      return {\n        history: history.concat([{\n          squares\n        }]),\n        stepNumber: prevState.stepNumber + 1,\n        xIsNext: !prevState.xIsNext\n      }\n    })\n  }\n\n  /**\n   * If win is possible returns index of win, otherwise returns null.\n   * \n   * @param {Array} arr - copy of tictactoe board\n   */\n  winPossible = arr => {\n    const availableSquares = this.getAvailableMoves(arr)\n    for (let i = 0; i < availableSquares.length; i++) {\n      const freeIndex = availableSquares[i]\n      arr[freeIndex] = 'O'\n      if (this.calculateWinner(arr)) return freeIndex\n      arr[freeIndex] = freeIndex\n    }\n    return -1\n  }\n\n  /**\n   * Gets a random index to an array.\n   * \n   * @param {Number} len - length of the array\n   */\n  getRandIndex = len => Math.floor(Math.random() * len)\n\n  /**\n   * Jumps to point in game's history.\n   * \n   * @param {Number} step - index of board state\n   */\n  jumpTo = step => {\n    this.setState({\n      stepNumber: step,\n      xIsNext: step % 2 === 0\n    })\n    // if step is odd, attempt computer move\n    step % 2 && setTimeout(this.makeComputerMove, 1500)\n  }\n\n  /**\n   * Returns array of empty spaces on a board.\n   * \n   * @param {Array} board - tictactoe board\n   */\n  getAvailableMoves = board => board.map((sq, i) => sq === null ? i : sq).filter(sq => Number.isInteger(sq))\n\n  /**\n   * Applies minimax algorithm to tictactoe. Calculates best possible move for CPU.\n   * \n   * @param {Array} board - representation of tictactoe board\n   * @param {String} player - token of current player ('X'/'O')\n   */\n  minimax = (board, player, depth=0) => {\n    // declare moves array to collect the move objects the function will create later\n    const moves = []\n    // get available spaces on the board\n    const availableMoves = this.getAvailableMoves(board)\n    // check for the terminal states such as win, lose, and tie and return a value accordingly\n    const { token } = this.calculateWinner(board)\n  \n    // BASE CASE\n    if (token === 'O') { // if computer win\n      // add to branch\n      return { score: 100 - depth }\n    } else if (token === 'X') { // if human win\n      // subtract from branch\n      return { score: depth - 100 }\n    } else if (!availableMoves.length) { // tie\n      // branch is unchanged\n      return { score: 0 }\n    }\n\n    const nextPlayer = player === 'X' ? 'O' : 'X'\n\n    // loop through available spots to create an array of possible move objects with associated score and index values\n    for (let i = 0; i < availableMoves.length; i++) {\n      // initialize a new move object\n      const move = {}\n      // sets the move index to an available spot on the board\n      move.index = availableMoves[i]\n      // add token to available square\n      board[move.index] = player\n      // tests outcome of move, pass in next token\n      const result = this.minimax(board, nextPlayer, depth + 1)\n      // give the move the appropriate score\n      move.score = result.score\n      // reset the spot to empty\n      board[move.index] = move.index\n      // moves array will store all moves at this depth and their associated scores\n      moves.push(move)\n    }\n\n    /*\n    Each move obj contains an index referring to a space on the board\n    and a score that refers to the likelihood of success after the move:\n    - a 10 results from an CPU win\n    - a 0 from a tie\n    - a 10 from a HU win\n    Computer recurses through all possible moves, and kicks them upstream for evaluation,\n    picking the highest score for its own turns (meaning the best possible outcome),\n    and lowest score for human turns (meaning the worst possible outcome).\n    */\n    let bestMove, bestScore\n    if (player === 'O') { // if CPU turn\n      bestScore = -1000 // start low\n      for (let i = 0; i < moves.length; i++) {\n        // if score at index is greater than best score\n        if (moves[i].score > bestScore) {\n          // score at index becomes best score\n          bestScore = moves[i].score\n          bestMove = i\n        }\n      }\n    } else { // if HU turn\n      bestScore = 1000 // start high\n      for (let i = 0; i < moves.length; i++) {\n        // if score at index is less than best score\n        if (moves[i].score < bestScore) {\n          // score at index becomes best score\n          bestScore = moves[i].score\n          bestMove = i\n        }\n      }\n    }\n\n    // now return the chosen move (object) from the moves array\n    return moves[bestMove]\n  }\n\n  /**\n   * Sets difficulty level of cpu.\n   * \n   * @param {Event} e - event object\n   */\n  handleLvlChange = e => {\n    const cpu = { ...this.state.cpu }\n    cpu.level = e.target.value\n    const stepNumber = 0\n    const xIsNext = true\n    this.setState({ cpu, stepNumber, xIsNext })\n  }\n\n  /**\n   * Toggles opponent (HU/CPU). Resets game.\n   */\n  handleVsChange = () => this.setState(prevState => {\n    const isOpponent = !prevState.cpu.isOpponent\n    const level = '1'\n    const cpu = { isOpponent, level }\n    const stepNumber = 0\n    const xIsNext = true\n    return { cpu, stepNumber, xIsNext }\n  })\n\n  render() {\n    const {\n      history,\n      stepNumber,\n      cpu,\n      xIsNext\n    } = this.state\n    const current = history[stepNumber]\n    const squares = [...current.squares]\n    const isTie = squares.every(el => typeof el === 'string')\n    const win = this.calculateWinner(squares)\n    let status\n    // if there is a winner, declare winner\n    if (win.token) {\n      status = `Winner: ${win.token}`\n    } else if (isTie) {\n      // it is a tie if every square is NOT null (and there is no winner)\n      status = \"It's a tie!\"\n    } else if (cpu.isOpponent && !xIsNext) { \n      status = \"...running diagnostics...\"\n    } else {\n      // otherwise show next player\n      status = `Next player is: ${xIsNext ? 'X' : 'O'}`\n    }\n\n    // get past moves\n    const Moves = history.map((_, move) => {\n      const desc = move ?\n        `Go to move #${move}` :\n        'Go to game start'\n      return (\n        <li key={ move }>\n          <button\n            onClick={() => this.jumpTo(move)}\n            className={move === stepNumber ? 'selected' : ''}>\n            { desc }\n          </button>\n        </li>\n      )\n    })\n\n    return (\n      <div className=\"TicTacToe\">\n        {/* Links back to homepage */}\n        <Back showInitials/>\n        {/* Title */}\n        <h1 className=\"title\">Tic Tac Toe</h1>\n        {/* Game */}\n        <div className=\"board-container\">\n          <Board\n            onClick={i => this.handleClick(i)}\n            changeLevel={e => this.handleLvlChange(e)}\n            changeOpponent={ this.handleVsChange }\n            isTie={ isTie }\n            cpu={ cpu }\n            xIsNext={ xIsNext }\n            winSquares={ win.combo }\n            squares={ squares } \n            status={ status }\n            moves={ Moves }/>\n        </div>\n      </div>\n    )\n  }\n}\n","// for terminal-like file-tree branches see https://en.wikipedia.org/wiki/Box-drawing_character\nconst branches = {\n  name: 'emmanuel_price/',\n  children: [{\n      name: 'code/',\n      children: [{\n        name: 'life',\n        link: {\n          type: 'view',\n          url: '/code/life',\n          newTab: true\n        }\n      }, {\n        name: 'tictactoe',\n        link: {\n          type: 'view',\n          url: '/code/tictactoe',\n          newTab: true\n        }\n      }, {\n        name: 'concat',\n        link: {\n          type: 'view',\n          url: '/code/concat'\n        }\n      }]\n    }, {\n      name: 'other/',\n      children: [{\n        name: 'art',\n        link: {\n          type: 'view',\n          url: '/other/art'\n        }\n      }, {\n        name: 'quotes',\n        link: {\n          type: 'view',\n          url: '/other/quotes'\n        }\n      }]\n    }, {\n    name: 'info/',\n    children: [{\n      name: 'bio',\n      link: {\n        type: 'view',\n        url: '/info/bio'\n      }\n    }, {\n      name: 'github',\n      link: {\n        type: 'anchor',\n        url: 'https://github.com/emantheman'\n      }\n    }, {\n      name: 'resume.pdf',\n      link: {\n        type: 'view',\n        url: '/info/resume.pdf',\n        newTab: true\n      }\n    }]\n  }]\n}\n\n// writing\n// {\n//   name: 'writing/',\n//   children: [{\n//     name: 'cc.pdf',\n//     link: {\n//       type: 'view',\n//       url: '/other/writing/cold_cuts.pdf',\n//       newTab: true\n//     }\n//   }, {\n//     name: 'beachd.pdf',\n//     link: {\n//       type: 'view',\n//       url: '/other/writing/beached.pdf',\n//       newTab: true\n//     }\n//   }]\n// }, \n\nexport default branches","import React, { Component } from 'react'\nimport { Route, withRouter } from 'react-router-dom'\n\nimport FileTree from './components/filetree/FileTree'\n\nimport routes from './config/routes'\nimport branches from './config/schema'\n\nimport './styles/App.scss'\n\nclass App extends Component {\n  constructor(props) {\n    super(props)\n  \n    this.state = {\n      expanded: false,\n      stowed: false\n    }\n  }\n\n  /**\n   * Reverses menu's openness.\n   * \n   * @param {Boolean} isOpen - true if the menu is open\n   */\n  toggleMenu = isOpen => this.setState({ expanded: !isOpen })\n\n  /**\n   * Opens menu.\n   */\n  openMenu = () => this.setState({ expanded: true })\n\n  /**\n   * Locks menu in place and allows menu to slide neatly out of view, respectively.\n   */\n  menu = {\n    stow: () => this.setState({ stowed: true, expanded: false }),\n    unstow: () => this.setState({ stowed: false })\n  }\n\n  render() {\n    const { expanded, stowed } = this.state\n    const { history } = this.props\n\n    // Instantiate routes\n    const Routes = routes.map((route, index) => {\n      const { path, view: View } = route\n      return <Route key={ index }\n                    exact path={ path }\n                    render={() => <View menu={ this.menu }/>}/>\n    })\n\n    return (\n      <div\n        className=\"App\"\n        style={{ width: '100vw', height: '100vh' }}>\n        {/* LHS Menu (click to expand) */}\n        <div\n          className={\"left-column \" + (stowed ? 'stowed ' : '') + (expanded ? 'open' : '')}\n          onClick={ !expanded ? this.openMenu : undefined }>\n          <FileTree\n            branches={ branches }\n            path={ history.location.pathname }\n            toggleMenu={ this.toggleMenu }\n            menuOpen={ expanded }/>\n        </div>\n        {/* Render routes */}\n        <main>\n          { Routes }\n        </main>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(App)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './config/serviceWorker';\n\nconst AppRouter = () => (\n  <HashRouter>\n    <App />\n  </HashRouter>\n)\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}